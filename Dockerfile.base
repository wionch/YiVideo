# ./Dockerfile.base

# 使用 NVIDIA 官方的 CUDA 开发镜像作为基础
# 它包含了完整的 CUDA 工具包和编译器
# FROM nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04
FROM ccr-2vdh3abv-pub.cnc.bj.baidubce.com/paddlepaddle/paddle:3.1.1-gpu-cuda11.8-cudnn8.9

# 设置环境变量，避免在 apt 安装过程中出现交互式提示
ENV DEBIAN_FRONTEND=noninteractive

# 1. 安装编译 FFmpeg 所需的系统依赖和常用编解码器开发库
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    yasm \
    nasm \
    cmake \
    git \
    wget \
    unzip \
    pkg-config \
    libx264-dev \
    libx265-dev \
    libnuma-dev \
    libvpx-dev \
    libfdk-aac-dev \
    libgl1-mesa-glx \
    libmp3lame-dev \
    libopus-dev \
    python3.10 \
    python3-pip \
    # && ln -s /usr/bin/python3 /usr/bin/python \
    && rm -rf /var/lib/apt/lists/*


# 2. & 3. 编译安装 nv-codec-headers 和 FFmpeg
# 将多个步骤合并到单个 RUN 指令中，以减少 Docker 镜像的层数并确保依赖在同一上下文中安装。
# 新增：设置 PKG_CONFIG_PATH 环境变量，并克隆 nv-codec-headers 的稳定版本
WORKDIR /usr/local/src
RUN export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig" && \
    git clone -b n11.1.5.2 https://git.videolan.org/git/ffmpeg/nv-codec-headers.git && \
    cd nv-codec-headers && \
    make && make install && \
    cd /usr/local/src && \
    wget https://ffmpeg.org/releases/ffmpeg-6.0.tar.bz2 && \
    tar xjvf ffmpeg-6.0.tar.bz2 && \
    cd ffmpeg-6.0 && \
    ./configure \
        --enable-gpl \
        --enable-nonfree \
        --enable-shared \
        --enable-libx264 \
        --enable-libx265 \
        --enable-libvpx \
        --enable-libfdk-aac \
        --enable-libmp3lame \
        --enable-libopus \
        --enable-cuda-nvcc \
        --enable-nvenc \
        --enable-nvdec \
        --enable-libnpp \
        --extra-cflags="-I/usr/local/cuda/include" \
        --extra-ldflags="-L/usr/local/cuda/lib64" && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    # 清理源码以减小镜像体积
    cd / && rm -rf /usr/local/src/*

# 安装torch
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118 -i https://mirrors.aliyun.com/pypi/simple

# 设置默认工作目录
WORKDIR /app
